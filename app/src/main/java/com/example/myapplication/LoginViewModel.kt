package com.example.myapplicationimport androidx.lifecycle.ViewModelimport androidx.lifecycle.viewModelScopeimport kotlinx.coroutines.delayimport kotlinx.coroutines.flow.MutableStateFlowimport kotlinx.coroutines.flow.StateFlowimport kotlinx.coroutines.flow.updateimport kotlinx.coroutines.launchclass LoginViewModel() : ViewModel() {    private val _uiState =        MutableStateFlow(LoginUIState(loading = false, result = false, error = false))    val uiState: StateFlow<LoginUIState> = _uiState    fun handleSubmit(username: String, password: String) {        viewModelScope.launch {            delay(3000)            // check login for credential using username and password            _uiState.update { state -> state.copy(loading = false, result = true, error = false) }        }    }}data class LoginUIState(val loading: Boolean, val result: Boolean, val error: Boolean) {}